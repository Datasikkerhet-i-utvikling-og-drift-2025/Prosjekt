1769047109
waR3U4bTeM%3A380433e88e1c52b350aa90dd9a3a4583-58f7e36b05ba879c42319336827d64e2
s:5096:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjU4ZjdlMzZiMDViYTg3OWM0MjMxOTMzNjgyN2Q2NGUyIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTk6InJlZ2lzdGVyU3R1ZGVudC5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czoxOToicmVnaXN0ZXJTdHVkZW50LnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MjkxNjoiPD9waHANCiRob3N0ID0gJ215c3FsJzsNCiRkYiA9ICdkYXRhYmFzZSc7DQokdXNlciA9ICdhZG1pbic7DQokcGFzcyA9ICdhZG1pbic7DQoNCiRjb25uID0gbmV3IG15c3FsaSgkaG9zdCwgJHVzZXIsICRwYXNzLCAkZGIpOw0KDQppZiAoJGNvbm4tPmNvbm5lY3RfZXJyb3IpIHsNCiAgICBkaWUoIkNvbm5lY3Rpb24gZmFpbGVkOiAiIC4gJGNvbm4tPmNvbm5lY3RfZXJyb3IpOw0KfQ0KDQppZiAoJF9TRVJWRVJbJ1JFUVVFU1RfTUVUSE9EJ10gPT09ICdQT1NUJykgew0KICAgIC8vIEhhbmRsZSB1c2VyIHJlZ2lzdHJhdGlvbg0KICAgICRlbWFpbCA9ICRfUE9TVFsnZW1haWwnXTsNCiAgICAkcGFzc3dvcmQgPSBwYXNzd29yZF9oYXNoKCRfUE9TVFsncGFzc3dvcmQnXSwgUEFTU1dPUkRfREVGQVVMVCk7DQogICAgJGZpcnN0X25hbWUgPSAkX1BPU1RbJ2ZpcnN0X25hbWUnXTsNCiAgICAkbGFzdF9uYW1lID0gJF9QT1NUWydsYXN0X25hbWUnXTsNCiAgICAkdXNlcl90eXBlID0gJF9QT1NUWyd1c2VyX3R5cGUnXTsNCiAgICAkc3R1ZHlfcHJvZ3JhbSA9ICRfUE9TVFsnc3R1ZHlfcHJvZ3JhbSddOw0KICAgICRjb2hvcnRfeWVhciA9ICRfUE9TVFsnY29ob3J0X3llYXInXTsNCg0KICAgIGlmIChlbXB0eSgkZW1haWwpIHx8IGVtcHR5KCRwYXNzd29yZCkgfHwgZW1wdHkoJGZpcnN0X25hbWUpIHx8IGVtcHR5KCRsYXN0X25hbWUpIHx8IGVtcHR5KCR1c2VyX3R5cGUpIHx8IGVtcHR5KCRzdHVkeV9wcm9ncmFtKSB8fCBlbXB0eSgkY29ob3J0X3llYXIpKSB7DQogICAgICAgIGh0dHBfcmVzcG9uc2VfY29kZSg0MDApOw0KICAgICAgICBlY2hvIGpzb25fZW5jb2RlKFsnZXJyb3InID0+ICdBbGwgZmllbGRzIGFyZSByZXF1aXJlZCddKTsNCiAgICAgICAgZXhpdDsNCiAgICB9DQoNCiAgICAvLyBJbnNlcnQgdXNlciBjcmVkZW50aWFscyBpbnRvIHVzZXJzIHRhYmxlDQogICAgJHN0bXQgPSAkY29ubi0+cHJlcGFyZSgiSU5TRVJUIElOVE8gdXNlcnMgKGVtYWlsLCBwYXNzd29yZF9oYXNoLCB1c2VyX3R5cGUpIFZBTFVFUyAoPywgPywgPykiKTsNCiAgICAkc3RtdC0+YmluZF9wYXJhbSgic3NzIiwgJGVtYWlsLCAkcGFzc3dvcmQsICR1c2VyX3R5cGUpOw0KDQogICAgaWYgKCRzdG10LT5leGVjdXRlKCkpIHsNCiAgICAgICAgJHVzZXJfaWQgPSAkc3RtdC0+aW5zZXJ0X2lkOyAvLyBHZXQgdGhlIGluc2VydGVkIHVzZXIgSUQNCg0KICAgICAgICAvLyBJbnNlcnQgc3R1ZGVudCBkZXRhaWxzIGludG8gc3R1ZGVudHMgdGFibGUNCiAgICAgICAgJHN0bXQgPSAkY29ubi0+cHJlcGFyZSgiSU5TRVJUIElOVE8gc3R1ZGVudHMgKHN0dWRlbnRfaWQsIGZpcnN0X25hbWUsIGxhc3RfbmFtZSwgc3R1ZHlfcHJvZ3JhbSwgY29ob3J0X3llYXIpIFZBTFVFUyAoPywgPywgPywgPywgPykiKTsNCiAgICAgICAgJHN0bXQtPmJpbmRfcGFyYW0oImlzc3NpIiwgJHVzZXJfaWQsICRmaXJzdF9uYW1lLCAkbGFzdF9uYW1lLCAkc3R1ZHlfcHJvZ3JhbSwgJGNvaG9ydF95ZWFyKTsNCg0KICAgICAgICBpZiAoJHN0bXQtPmV4ZWN1dGUoKSkgew0KICAgICAgICAgICAgLy8gRmV0Y2ggdGhlIGNvbWJpbmVkIHVzZXIgYW5kIHN0dWRlbnQgZGV0YWlscw0KICAgICAgICAgICAgJHNxbCA9ICINCiAgICAgICAgICAgICAgICBTRUxFQ1QNCiAgICAgICAgICAgICAgICAgICAgdXNlcnMudXNlcl9pZCwNCiAgICAgICAgICAgICAgICAgICAgdXNlcnMuZW1haWwsDQogICAgICAgICAgICAgICAgICAgIHVzZXJzLnVzZXJfdHlwZSwNCiAgICAgICAgICAgICAgICAgICAgc3R1ZGVudHMuc3R1ZGVudF9pZCwNCiAgICAgICAgICAgICAgICAgICAgc3R1ZGVudHMuZmlyc3RfbmFtZSwNCiAgICAgICAgICAgICAgICAgICAgc3R1ZGVudHMubGFzdF9uYW1lLA0KICAgICAgICAgICAgICAgICAgICBzdHVkZW50cy5zdHVkeV9wcm9ncmFtLA0KICAgICAgICAgICAgICAgICAgICBzdHVkZW50cy5jb2hvcnRfeWVhciwNCiAgICAgICAgICAgICAgICAgICAgdXNlcnMuY3JlYXRlZF9hdA0KICAgICAgICAgICAgICAgIEZST00NCiAgICAgICAgICAgICAgICAgICAgYGRhdGFiYXNlYC51c2Vycw0KICAgICAgICAgICAgICAgIEpPSU4NCiAgICAgICAgICAgICAgICAgICAgYGRhdGFiYXNlYC5zdHVkZW50cyBPTiB1c2Vycy51c2VyX2lkID0gc3R1ZGVudHMuc3R1ZGVudF9pZA0KICAgICAgICAgICAgICAgIFdIRVJFDQogICAgICAgICAgICAgICAgICAgIHVzZXJzLnVzZXJfaWQgPSA/DQogICAgICAgICAgICAiOw0KICAgICAgICAgICAgJHN0bXQgPSAkY29ubi0+cHJlcGFyZSgkc3FsKTsNCiAgICAgICAgICAgICRzdG10LT5iaW5kX3BhcmFtKCJpIiwgJHVzZXJfaWQpOw0KICAgICAgICAgICAgJHN0bXQtPmV4ZWN1dGUoKTsNCiAgICAgICAgICAgICRyZXN1bHQgPSAkc3RtdC0+Z2V0X3Jlc3VsdCgpOw0KICAgICAgICAgICAgJHVzZXJfZGV0YWlscyA9ICRyZXN1bHQtPmZldGNoX2Fzc29jKCk7DQoNCiAgICAgICAgICAgIGVjaG8ganNvbl9lbmNvZGUoWydtZXNzYWdlJyA9PiAnU3R1ZGVudCByZWdpc3RlcmVkIHN1Y2Nlc3NmdWxseS4nLCAndXNlcicgPT4gJHVzZXJfZGV0YWlsc10pOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgZWNobyBqc29uX2VuY29kZShbJ2Vycm9yJyA9PiAnRXJyb3I6ICcgLiAkc3RtdC0+ZXJyb3JdKTsNCiAgICAgICAgfQ0KICAgIH0gZWxzZSB7DQogICAgICAgIGVjaG8ganNvbl9lbmNvZGUoWydlcnJvcicgPT4gJ0Vycm9yOiAnIC4gJHN0bXQtPmVycm9yXSk7DQogICAgfQ0KDQogICAgJHN0bXQtPmNsb3NlKCk7DQogICAgZXhpdDsNCn0gZWxzZSB7DQogICAgaHR0cF9yZXNwb25zZV9jb2RlKDQwNSk7DQogICAgZWNobyBqc29uX2VuY29kZShbJ2Vycm9yJyA9PiAnTWV0aG9kIG5vdCBhbGxvd2VkJ10pOw0KfQ0KDQokY29ubi0+Y2xvc2UoKTsNCj8+IjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e31zOjQwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGVudW1zIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";