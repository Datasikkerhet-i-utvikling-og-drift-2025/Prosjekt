services:
  mysql:
    build:
      context: Database/.docker
      dockerfile: Dockerfile
    container_name: mysql
    ports:
      - "3306:3306"
    networks:
      - project_network
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_ADMIN}
      - MYSQL_PASSWORD=${DB_ADMIN_PASS}
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/mysql

  backend:
    build:
      context: ./WebApp/backend
      dockerfile: .docker/Dockerfile
    container_name: backend
    ports:
      - "9081:80"
    networks:
      - project_network
    depends_on:
      - mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_ADMIN_USER}
      - MYSQL_PASSWORD=${DB_ADMIN_PASS}
      - DB_USER=${DB_USER}
      - DB_USER_PASS=${DB_USER_PASS}
      - DB_STUDENT_USER=${DB_STUDENT_USER}
      - DB_STUDENT_PASS=${DB_STUDENT_PASS}
      - DB_LECTURER_USER=${DB_LECTURER_USER}
      - DB_LECTURER_PASS=${DB_LECTURER_PASS}
      - DB_GUEST_USER=${DB_GUEST_USER}
      - DB_GUEST_PASS=${DB_GUEST_PASS}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_PORT=${SMTP_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - API_KEY=${API_KEY}
      - URL=${URL}
      - API_URL=${API_URL}
    env_file:
      - .env
    volumes:
      - ./WebApp/backend:/var/www/html
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./WebApp/frontend
      dockerfile: .docker/Dockerfile
    container_name: frontend
    ports:
      - "8080:80"
    networks:
      - project_network
    depends_on:
      - backend
    volumes:
      - ./WebApp/frontend:/var/www/html
    environment:
      - API_URL=http://backend
      - API_KEY=${API_KEY}
      - URL=${URL}
    env_file:
      - .env

  # MongoDB: Lagrer Graylog konfigurasjonsdata
  mongodb:
    image: mongo:5.0
    container_name: mongodb
    volumes:
      - mongodb_data:/data/db
    networks:
      - project_network
    restart: always

  # OpenSearch: Lagrer og indekserer loggene
  opensearch:
    image: opensearchproject/opensearch:2.8.0
    container_name: opensearch
    volumes:
      - os_data:/usr/share/opensearch/data
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - project_network
    restart: always

  # Graylog: Selve loggbehandlingssystemet
  graylog:
    image: graylog/graylog:5.0
    container_name: graylog
    volumes:
      - graylog_data:/usr/share/graylog/data
    environment:
      # Endre CHANGE_ME til en sikker hemmelig n√∏kkel
      - GRAYLOG_PASSWORD_SECRET=thisIsASecretPasswordPepperFor2025Graylog
      # Standard admin passord: admin (Passordet er admin i SHA-256 hash)
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_HTTP_EXTERNAL_URI=http://localhost:9000/
      - GRAYLOG_ELASTICSEARCH_HOSTS=http://opensearch:9200
      - GRAYLOG_MONGODB_URI=mongodb://mongodb:27017/graylog
    ports:
      # Web grensesnitt
      - "9000:9000"
      # GELF UDP for logging
      - "12201:12201/udp"
      # Syslog
      - "1514:1514/udp"
    depends_on:
      - mongodb
      - opensearch
    networks:
      - project_network
    restart: always

networks:
  project_network:
    driver: bridge

volumes:
  db_data:
  mongodb_data:
  os_data:
  graylog_data:
